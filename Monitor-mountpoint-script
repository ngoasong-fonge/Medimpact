#!/bin/bash

# Set the threshold percentages for disk space
WARNING_THRESHOLD=80
CRITICAL_THRESHOLD=85

# Set the email recipient address
EMAIL_RECIPIENT="your_email@example.com"

# Set the mount point to monitor
MOUNT_POINT="/path/to/your/mount/point"

# Get the current disk usage percentage
DISK_USAGE=$(df -h "$MOUNT_POINT" | awk 'NR==2 {sub("%","",$5); print $5}')

# Check if disk usage exceeds the critical threshold
if [ "$DISK_USAGE" -ge "$CRITICAL_THRESHOLD" ]; then
    EMAIL_SUBJECT="Disk Space Alert - CRITICAL"
    EMAIL_BODY="CRITICAL: Disk space usage on $MOUNT_POINT is $DISK_USAGE%."
    mail -s "$EMAIL_SUBJECT" "$EMAIL_RECIPIENT" <<< "$EMAIL_BODY"
    echo "Email alert sent: $EMAIL_BODY"
elif [ "$DISK_USAGE" -ge "$WARNING_THRESHOLD" ]; then
    EMAIL_SUBJECT="Disk Space Alert - WARNING"
    EMAIL_BODY="WARNING: Disk space usage on $MOUNT_POINT is $DISK_USAGE%."
    mail -s "$EMAIL_SUBJECT" "$EMAIL_RECIPIENT" <<< "$EMAIL_BODY"
    echo "Email alert sent: $EMAIL_BODY"
else
    echo "Disk space usage is within acceptable limits: $DISK_USAGE%"
fi

----------------------------------------------------------------------------------------------------------------------------

This script will use df to check the disk space and mail to send email alerts. Ensure you have the mail command properly configured on your system.
Make sure to customize the script with your specific mount point, email address, and threshold values. Save the script to a file, for example, disk_space_monitor.sh, and make it executable using the following command:
chmod +x disk_space_monitor.sh

You can then schedule this script to run periodically using a cron job. For example, to run it every hour, add the following line to your crontab:
0 * * * * /path/to/disk_space_monitor.sh
