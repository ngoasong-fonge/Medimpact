[databases]
db1 = host=1.1.1.1 port=5432 dbname=db1 user=db1_user
db2 = host=1.1.1.1 port=5432 dbname=db2 user=db2_user

[pgbouncer]
listen_addr = 1.1.1.1
listen_port = 3333
auth_type = md5
auth_file = /etc/pgbouncer/userlist.txt
admin_users = admin_user
pool_mode = transaction
max_client_conn = 1000
default_pool_size = 20
logfile = /var/log/pgbouncer/pgbouncer.log
pidfile = /var/log/pgbouncer/pgbouncer.pid
unix_socket_dir = /tmp
ignore_startup_parameters = extra_float_digits


====================================
WITH SchemaSize AS (
  SELECT 
    ps.nspname AS schema_name,
    SUM(pg_total_relation_size(pc.oid)) AS total_size
  FROM 
    pg_class pc
  JOIN 
    pg_catalog.pg_namespace ps ON ps.oid = pc.relnamespace
  GROUP BY 
    ps.nspname
)
SELECT 
  ss.schema_name,
  pg_size_pretty(ss.total_size) AS total_size_pretty
FROM 
  SchemaSize ss
ORDER BY 
  ss.total_size DESC
LIMIT 10;


======================


-- Set up session table as a reference table
CREATE TABLE pgaudit.session (
    session_id TEXT NOT NULL,
    process_id INT NOT NULL,
    session_start_time TIMESTAMP WITH TIME ZONE NOT NULL,
    user_name TEXT NOT NULL,
    application_name TEXT,
    connection_from TEXT,
    state TEXT NOT NULL CONSTRAINT session_state_ck CHECK (state IN ('ok', 'error')),
    CONSTRAINT session_pk PRIMARY KEY (session_id)
);

SELECT create_reference_table('pgaudit.session');

-- Set up logon table as a reference table
CREATE TABLE pgaudit.logon (
    user_name TEXT NOT NULL,
    last_success TIMESTAMP WITH TIME ZONE,
    current_success TIMESTAMP WITH TIME ZONE,
    last_failure TIMESTAMP WITH TIME ZONE,
    failures_since_last_success INT NOT NULL,
    CONSTRAINT logon_pk PRIMARY KEY (user_name)
);

SELECT create_reference_table('pgaudit.logon');

-- Continue setting up other tables and views, distributing or creating reference tables as necessary
CREATE TABLE pgaudit.log_event (
    session_id TEXT NOT NULL CONSTRAINT logevent_sessionid_fk REFERENCES pgaudit.session (session_id),
    session_line_num NUMERIC NOT NULL,
    log_time TIMESTAMP(3) WITH TIME ZONE NOT NULL,
    command TEXT,
    error_severity TEXT,
    sql_state_code TEXT,
    virtual_transaction_id TEXT,
    transaction_id BIGINT,
    message TEXT,
    detail TEXT,
    hint TEXT,
    query TEXT,
    query_pos INTEGER,
    internal_query TEXT,
    internal_query_pos INTEGER,
    context TEXT,
    location TEXT,
    CONSTRAINT logevent_pk PRIMARY KEY (session_id, session_line_num)
);

SELECT create_reference_table('pgaudit.log_event');

-- Distribute the audit_substatement_detail table
CREATE TABLE pgaudit.audit_substatement_detail (
    session_id TEXT NOT NULL,
    statement_id NUMERIC NOT NULL,
    substatement_id NUMERIC NOT NULL,
    session_line_num NUMERIC NOT NULL,
    audit_type TEXT NOT NULL CONSTRAINT auditsubstatementdetail_audittype_ck CHECK (audit_type IN ('session', 'object')),
    class TEXT NOT NULL,
    command TEXT NOT NULL,
    object_type TEXT,
    object_name TEXT,
    CONSTRAINT auditsubstatementdetail_pk PRIMARY KEY (session_id, statement_id, substatement_id, session_line_num)
);

SELECT create_distributed_table('pgaudit.audit_substatement_detail', 'session_id');
