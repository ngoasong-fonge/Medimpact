[databases]
db1 = host=1.1.1.1 port=5432 dbname=db1 user=db1_user
db2 = host=1.1.1.1 port=5432 dbname=db2 user=db2_user

[pgbouncer]
listen_addr = 1.1.1.1
listen_port = 3333
auth_type = md5
auth_file = /etc/pgbouncer/userlist.txt
admin_users = admin_user
pool_mode = transaction
max_client_conn = 1000
default_pool_size = 20
logfile = /var/log/pgbouncer/pgbouncer.log
pidfile = /var/log/pgbouncer/pgbouncer.pid
unix_socket_dir = /tmp
ignore_startup_parameters = extra_float_digits




-------------------------------------------------------------------

citus=# select * from partman.part_config ;
-[ RECORD 1 ]------------+-------------------------------------------
parent_table             | mepstg.stg_mep_claim_10r
control                  | created
partition_interval       | 7 days
partition_type           | range
premake                  | 4
automatic_maintenance    | on
template_table           | partman.template_mepstg_stg_mep_claim_10r
retention                | 2 week
retention_schema         | archive_schema
retention_keep_index     | t
retention_keep_table     | t
epoch                    | none
constraint_cols          |
optimize_constraint      | 30
infinite_time_partitions | t
datetime_string          | YYYYMMDD
jobmon                   | t
sub_partition_set_full   | f
undo_in_progress         | f
inherit_privileges       | f
constraint_valid         | t
ignore_default_data      | t
default_table            | t
date_trunc_interval      |

citus=# \dt mepstg.*
                            List of relations
 Schema |             Name             |       Type        |    Owner
--------+------------------------------+-------------------+-------------
 mepstg | stg_mep_claim_10r            | partitioned table | deployadmin
 mepstg | stg_mep_claim_10r_default    | table             | deployadmin
 mepstg | stg_mep_claim_10r_old        | table             | deployadmin
 mepstg | stg_mep_claim_10r_p20240526  | table             | deployadmin
 mepstg | stg_mep_claim_10r_p20240602  | table             | deployadmin
 mepstg | stg_mep_claim_10r_p20240609  | table             | deployadmin
 mepstg | stg_mep_claim_10r_p20240616  | table             | deployadmin
 mepstg | stg_mep_claim_10r_p20240623  | table             | deployadmin
 mepstg | stg_mep_claim_10r_p20240630  | table             | deployadmin
 mepstg | stg_mep_claim_10r_p20240707  | table             | deployadmin
 mepstg | stg_mep_claim_10r_p20240714  | table             | deployadmin

------------------------------------------------------

parent_table             | mepstg.stg_mep_claim_15r
control                  | created
partition_interval       | 7 days
partition_type           | range
premake                  | 4
automatic_maintenance    | on
template_table           | partman.template_mepstg_stg_mep_claim_15r
retention                | 4 week
retention_schema         | archive_schema
retention_keep_index     | t
retention_keep_table     | t
epoch                    | none
constraint_cols          |
optimize_constraint      | 30
infinite_time_partitions | t
datetime_string          | YYYYMMDD
jobmon                   | t
sub_partition_set_full   | f
undo_in_progress         | f
inherit_privileges       | f
constraint_valid         | t
ignore_default_data      | t
default_table            | t

 mepstg | stg_mep_claim_15r             | partitioned table | deployadmin
 mepstg | stg_mep_claim_15r_default     | table             | postgres
 mepstg | stg_mep_claim_15r_old         | table             | deployadmin
 mepstg | stg_mep_claim_15r_p20240324   | table             | postgres

----------------------------------------------------------------------------------------------
-- Creating partitions from 2024-07-21 to 2024-09-01

CREATE TABLE mepstg.stg_mep_claim_10r_p20240721 PARTITION OF mepstg.stg_mep_claim_10r
    FOR VALUES FROM ('2024-07-21 00:00:00') TO ('2024-07-28 00:00:00')
TABLESPACE pg_default;

ALTER TABLE IF EXISTS mepstg.stg_mep_claim_10r_p20240721
    OWNER to deployadmin;

CREATE TABLE mepstg.stg_mep_claim_10r_p20240728 PARTITION OF mepstg.stg_mep_claim_10r
    FOR VALUES FROM ('2024-07-28 00:00:00') TO ('2024-08-04 00:00:00')
TABLESPACE pg_default;

ALTER TABLE IF EXISTS mepstg.stg_mep_claim_10r_p20240728
    OWNER to deployadmin;

CREATE TABLE mepstg.stg_mep_claim_10r_p20240804 PARTITION OF mepstg.stg_mep_claim_10r
    FOR VALUES FROM ('2024-08-04 00:00:00') TO ('2024-08-11 00:00:00')
TABLESPACE pg_default;

ALTER TABLE IF EXISTS mepstg.stg_mep_claim_10r_p20240804
    OWNER to deployadmin;

CREATE TABLE mepstg.stg_mep_claim_10r_p20240811 PARTITION OF mepstg.stg_mep_claim_10r
    FOR VALUES FROM ('2024-08-11 00:00:00') TO ('2024-08-18 00:00:00')
TABLESPACE pg_default;

ALTER TABLE IF EXISTS mepstg.stg_mep_claim_10r_p20240811
    OWNER to deployadmin;

CREATE TABLE mepstg.stg_mep_claim_10r_p20240818 PARTITION OF mepstg.stg_mep_claim_10r
    FOR VALUES FROM ('2024-08-18 00:00:00') TO ('2024-08-25 00:00:00')
TABLESPACE pg_default;

ALTER TABLE IF EXISTS mepstg.stg_mep_claim_10r_p20240818
    OWNER to deployadmin;

CREATE TABLE mepstg.stg_mep_claim_10r_p20240825 PARTITION OF mepstg.stg_mep_claim_10r
    FOR VALUES FROM ('2024-08-25 00:00:00') TO ('2024-09-01 00:00:00')
TABLESPACE pg_default;

ALTER TABLE IF EXISTS mepstg.stg_mep_claim_10r_p20240825
    OWNER to deployadmin;

-----------------------------------------------------------


To ensure you move all data from the default partition to the newly created partitions, you can follow a similar process for each partition. Hereâ€™s how you can do it for all the partitions:

-- For partition 20240721
INSERT INTO mepstg.stg_mep_claim_10r_p20240721
SELECT * FROM mepstg.stg_mep_claim_10r_default
WHERE created >= '2024-07-21' AND created < '2024-07-28';

DELETE FROM mepstg.stg_mep_claim_10r_default
WHERE created >= '2024-07-21' AND created < '2024-07-28';

-- For partition 20240728
INSERT INTO mepstg.stg_mep_claim_10r_p20240728
SELECT * FROM mepstg.stg_mep_claim_10r_default
WHERE created >= '2024-07-28' AND created < '2024-08-04';

DELETE FROM mepstg.stg_mep_claim_10r_default
WHERE created >= '2024-07-28' AND created < '2024-08-04';

-- For partition 20240804
INSERT INTO mepstg.stg_mep_claim_10r_p20240804
SELECT * FROM mepstg.stg_mep_claim_10r_default
WHERE created >= '2024-08-04' AND created < '2024-08-11';

DELETE FROM mepstg.stg_mep_claim_10r_default
WHERE created >= '2024-08-04' AND created < '2024-08-11';

-- For partition 20240811
INSERT INTO mepstg.stg_mep_claim_10r_p20240811
SELECT * FROM mepstg.stg_mep_claim_10r_default
WHERE created >= '2024-08-11' AND created < '2024-08-18';

DELETE FROM mepstg.stg_mep_claim_10r_default
WHERE created >= '2024-08-11' AND created < '2024-08-18';

-- For partition 20240818
INSERT INTO mepstg.stg_mep_claim_10r_p20240818
SELECT * FROM mepstg.stg_mep_claim_10r_default
WHERE created >= '2024-08-18' AND created < '2024-08-25';

DELETE FROM mepstg.stg_mep_claim_10r_default
WHERE created >= '2024-08-18' AND created < '2024-08-25';

-- For partition 20240825
INSERT INTO mepstg.stg_mep_claim_10r_p20240825
SELECT * FROM mepstg.stg_mep_claim_10r_default
WHERE created >= '2024-08-25' AND created < '2024-09-01';

DELETE FROM mepstg.stg_mep_claim_10r_default
WHERE created >= '2024-08-25' AND created < '2024-09-01';




[svcpostgres@dv1medpgsc1 partition]$ cat /opt/app/patroni/scripts/partition/partition.log
WARNING:  Attempt to drop final partition in partition set mepstg.stg_mep_claim_10r as part of retention policy. If you see this message multiple times for the same table, advise reviewing retention policy and/or data entry into the partition set. Also consider setting "infinite_time_partitions = true" if there are large gaps in data insertion.).
WARNING:  Attempt to drop final partition in partition set mepstg.stg_mep_claim_15r as part of retention policy. If you see this message multiple times for the same table, advise reviewing retention policy and/or data entry into the partition set. Also consider setting "infinite_time_partitions = true" if there are large gaps in data insertion.).
WARNING:  Attempt to drop final partition in partition set mepstg.stg_mep_claim_20r as part of retention policy. If you see this message multiple times for the same table, advise reviewing retention policy and/or data entry into the partition set. Also consider setting "infinite_time_partitions = true" if there are large gaps in data insertion.).
WARNING:  Attempt to drop final partition in partition set mepstg.stg_mep_claim_31r as part of retention policy. If you see this message multiple times for the same table, advise reviewing retention policy and/or data entry into the partition set. Also consider setting "infinite_time_partitions = true" if there are large gaps in data insertion.).
WARNING:  Attempt to drop final partition in partition set mepstg.stg_mep_claim_32r as part of retention policy. If you see this message multiple times for the same table, advise reviewing retention policy and/or data entry into the partition set. Also consider setting "infinite_time_partitions = true" if there are large gaps in data insertion.).
WARNING:  Attempt to drop final partition in partition set mepstg.stg_mep_claim_33r as part of retention policy. If you see this message multiple times for the same table, advise reviewing retention policy and/or data entry into the partition set. Also consider setting "infinite_time_partitions = true" if there are large gaps in data insertion.).
WARNING:  Attempt to drop final partition in partition set mepstg.stg_mep_claim_40c as part of retention policy. If you see this message multiple times for the same table, advise reviewing retention policy and/or data entry into the partition set. Also consider setting "infinite_time_partitions = true" if there are large gaps in data insertion.).
WARNING:  Attempt to drop final partition in partition set mepstg.stg_mep_claim_file as part of retention policy. If you see this message multiple times for the same table, advise reviewing retention policy and/or data entry into the partition set. Also consider setting "infinite_time_partitions = true" if there are large gaps in data insertion.).
WARNING:  Attempt to drop final partition in partition set dmeapps.rep_edw_log as part of retention policy. If you see this message multiple times for the same table, advise reviewing retention policy and/or data entry into the partition set. Also consider setting "infinite_time_partitions = true" if there are large gaps in data insertion.).
ERROR:  updated partition constraint for default partition "rep_edw_log_default" would be violated by some row
CONTEXT: SQL statement "ALTER TABLE dmeapps.rep_edw_log ATTACH PARTITION dmeapps.rep_edw_log_p20240331 FOR VALUES FROM ('2024-03-31 00:00:00-07') TO ('2024-04-07 00:00:00-07')"
PL/pgSQL function create_partition_time(text,timestamp with time zone[],text) line 197 at EXECUTE
PL/pgSQL function partman.run_maintenance(text,boolean,boolean) line 265 at assignment
SQL statement "SELECT partman.run_maintenance('dmeapps.rep_edw_log', p_jobmon := 't', p_analyze := 'f')"
PL/pgSQL function partman.run_maintenance_proc(integer,boolean,boolean) line 36 at EXECUTE

