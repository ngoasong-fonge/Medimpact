[databases]
db1 = host=1.1.1.1 port=5432 dbname=db1 user=db1_user
db2 = host=1.1.1.1 port=5432 dbname=db2 user=db2_user

[pgbouncer]
listen_addr = 1.1.1.1
listen_port = 3333
auth_type = md5
auth_file = /etc/pgbouncer/userlist.txt
admin_users = admin_user
pool_mode = transaction
max_client_conn = 1000
default_pool_size = 20
logfile = /var/log/pgbouncer/pgbouncer.log
pidfile = /var/log/pgbouncer/pgbouncer.pid
unix_socket_dir = /tmp
ignore_startup_parameters = extra_float_digits


====================================
WITH SchemaSize AS (
  SELECT 
    ps.nspname AS schema_name,
    SUM(pg_total_relation_size(pc.oid)) AS total_size
  FROM 
    pg_class pc
  JOIN 
    pg_catalog.pg_namespace ps ON ps.oid = pc.relnamespace
  GROUP BY 
    ps.nspname
)
SELECT 
  ss.schema_name,
  pg_size_pretty(ss.total_size) AS total_size_pretty
FROM 
  SchemaSize ss
ORDER BY 
  ss.total_size DESC
LIMIT 10;


======================


Full Command Sequence
Reassign ownership from pgaudit_owner:

sql
Copy code
REASSIGN OWNED BY pgaudit_owner TO postgres;
Reassign ownership from pgaudit_etl:

sql
Copy code
REASSIGN OWNED BY pgaudit_etl TO postgres;
Revoke privileges from pgaudit_etl:

sql
Copy code
REVOKE ALL PRIVILEGES ON SCHEMA pgaudit FROM pgaudit_etl;
REVOKE ALL PRIVILEGES ON ALL TABLES IN SCHEMA pgaudit FROM pgaudit_etl;
REVOKE ALL PRIVILEGES ON ALL SEQUENCES IN SCHEMA pgaudit FROM pgaudit_etl;
REVOKE ALL PRIVILEGES ON ALL FUNCTIONS IN SCHEMA pgaudit FROM pgaudit_etl;
Drop the pgaudit schema and all its objects:

sql
Copy code
DROP SCHEMA IF EXISTS pgaudit CASCADE;
Drop the roles:

sql
Copy code
DROP ROLE IF EXISTS pgaudit_owner;
DROP ROLE IF EXISTS pgaudit_etl;
After executing these steps, you should be able to drop the roles pgaudit_owner and pgaudit_etl without encountering any further issues.







