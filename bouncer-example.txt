[databases]
db1 = host=1.1.1.1 port=5432 dbname=db1 user=db1_user
db2 = host=1.1.1.1 port=5432 dbname=db2 user=db2_user

[pgbouncer]
listen_addr = 1.1.1.1
listen_port = 3333
auth_type = md5
auth_file = /etc/pgbouncer/userlist.txt
admin_users = admin_user
pool_mode = transaction
max_client_conn = 1000
default_pool_size = 20
logfile = /var/log/pgbouncer/pgbouncer.log
pidfile = /var/log/pgbouncer/pgbouncer.pid
unix_socket_dir = /tmp
ignore_startup_parameters = extra_float_digits




-------------------------------------------------------------------

To set up the restore_command for fetching WAL files via sftp, you'll need to ensure a few things:

SSH Key Authentication: It's typically better to use SSH key authentication for automated processes like this to avoid password prompts.
Proper Permissions: Ensure the user on the archive host has the necessary permissions to access the WAL archive directory.
Correct Syntax in postgresql.conf: The restore_command needs to be properly formatted.
Here are the steps to achieve this:

1. Set Up SSH Key Authentication
On the Standby Server:

Generate SSH Key (if not already done):

sh
Copy code
ssh-keygen -t rsa -b 4096 -C "your_email@example.com"
Follow the prompts to save the key (usually under ~/.ssh/id_rsa).

Copy the SSH Public Key to the Archive Host:

sh
Copy code
ssh-copy-id user@ip.of.wal.archive.host
This sets up passwordless SSH access for the user on the archive host.

2. Update restore_command in postgresql.conf
On the Standby Server:

Edit postgresql.conf:

sh
Copy code
sudo nano /opt/app/postgres-data/postgresql.conf
Update the restore_command:

sh
Copy code
restore_command = 'sftp -q user@ip.of.wal.archive.host:data/master_wal_archive/%f %p'
3. Ensure Correct Permissions
Ensure that the user user on the archive host has read permissions for the data/master_wal_archive directory and its contents.

4. Verify SSH Access
Test the SSH access from the standby server to the archive host to ensure it works without a password prompt:

sh
Copy code
ssh user@ip.of.wal.archive.host
Ensure you can navigate to the data/master_wal_archive directory and list files:

sh
Copy code
ls data/master_wal_archive/
5. Restart the Standby Server
After making the necessary configuration changes, restart the PostgreSQL service on the standby server:

sh
Copy code
sudo systemctl restart postgresql-15
Complete Example
Here's a complete example of what your postgresql.conf might look like with the restore_command configured:

sh
Copy code
# Enable read-only queries on the standby server
hot_standby = on

# Connection settings for the primary server
primary_conninfo = 'host=primary.server.ip port=5432 user=replicator password=your_password'

# Restore command to fetch WAL files via sftp
restore_command = 'sftp -q user@ip.of.wal.archive.host:data/master_wal_archive/%f %p'
Summary
Set up SSH key authentication between the standby server and the archive host.
Configure the restore_command in postgresql.conf to use sftp.
Ensure the user on the archive host has the necessary permissions.
Test SSH access to confirm it works without a password prompt.
Restart the PostgreSQL service on the standby server.
By following these steps, you can ensure that the standby server correctly fetches WAL files from the archive host via sftp.



