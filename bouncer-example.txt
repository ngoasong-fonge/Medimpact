[databases]
db1 = host=1.1.1.1 port=5432 dbname=db1 user=db1_user
db2 = host=1.1.1.1 port=5432 dbname=db2 user=db2_user

[pgbouncer]
listen_addr = 1.1.1.1
listen_port = 3333
auth_type = md5
auth_file = /etc/pgbouncer/userlist.txt
admin_users = admin_user
pool_mode = transaction
max_client_conn = 1000
default_pool_size = 20
logfile = /var/log/pgbouncer/pgbouncer.log
pidfile = /var/log/pgbouncer/pgbouncer.pid
unix_socket_dir = /tmp
ignore_startup_parameters = extra_float_digits




-------------------------------------------------------------------



Detailed Steps
Add EDB Repository
Run the following command to add the EDB repository:


sudo dnf install -y https://repos.enterprisedb.com/edb-repo-latest.rpm
This command downloads and installs the latest EDB repository configuration for your system.

Install EDB Failover Manager
With the repository added, install EDB Failover Manager using:


sudo dnf install -y edb-efm-4.8
This command will download and install the latest version of EDB Failover Manager 4.8 from the repository.

Verify Installation
After the installation, verify that EDB Failover Manager has been installed correctly by checking the version:


efm --version
Configure EDB Failover Manager
Copy Configuration Files:

Copy the sample configuration files to the configuration directory:


sudo cp /usr/edb/efm-4.8/etc/efm.properties.in /etc/edb/efm-4.8/efm.properties
sudo cp /usr/edb/efm-4.8/etc/efm.nodes.in /etc/edb/efm-4.8/efm.nodes
Edit the Configuration Files:

Edit the efm.properties and efm.nodes files to match your environment. Use an editor such as nano or vi:


sudo nano /etc/edb/efm-4.8/efm.properties
sudo nano /etc/edb/efm-4.8/efm.nodes
Ensure the bind.address, db.user, db.password, and other necessary settings are configured correctly in efm.properties.

Set Proper Permissions:

Ensure the EFM configuration files have the correct permissions:


sudo chmod 600 /etc/edb/efm-4.8/efm.properties
sudo chmod 600 /etc/edb/efm-4.8/efm.nodes
Start and Enable EFM Service
Start the EFM Service:


sudo systemctl start edb-efm-4.8
Enable the EFM Service to Start on Boot:


sudo systemctl enable edb-efm-4.8
Verify EFM Service Status
Check the status of the EFM service to ensure it is running correctly:


sudo systemctl status edb-efm-4.8
Example Configuration
Primary Server (efm.properties):


bind.address = primary-server-ip
db.user = replicator
db.password = your_password
db.port = 5432
db.database = your_database
db.bin = /usr/pgsql-15/bin
db.service.owner = svcpostgres
admin.port = 8001
is.witness = false
ping.server.ip = your_ping_server_ip
efm.loglevel = INFO
Nodes File (efm.nodes):

Add the IP addresses and ports of the primary and standby nodes:


primary-server-ip:7800
standby-server-ip:7800
Summary
By following these steps, you will successfully install and configure the latest version of EDB Failover Manager (EFM) 4.8 on your Oracle Linux Server 8.8. This setup ensures that EFM is properly installed, configured, and set to start on boot, providing high availability and automatic failover for your PostgreSQL clusters.


-------------------------------------------

The efm_db_functions or efm_root_functions scripts perform management functions on behalf of the efm user.

The sudoers file contains entries that allow the user efm to control the Failover Manager service for clusters owned by postgres or enterprisedb. You can modify a copy of the sudoers file to grant permission to efm to manage Postgres clusters owned by other users.

The efm-49 file is located in /etc/sudoers.d and contains the following entries:

# Copyright EnterpriseDB Corporation, 2014-2021. All Rights Reserved.
#
# Do not edit this file. Changes to the file may be overwritten
# during an upgrade.
#
# This file assumes you are running your efm cluster as user 'efm'.  If not,
# then you will need to copy this file.

# Allow user 'efm' to sudo efm_db_functions as either 'postgres' or 'enterprisedb'.
# If you run your db service under a non-default account, you will need to copy
# this file to grant the proper permissions and specify the account in your efm
# cluster properties file by changing the 'db.service.owner' property.
efm    ALL=(postgres)      NOPASSWD:   /usr/edb/efm-4.9/bin/efm_db_functions
efm    ALL=(enterprisedb)  NOPASSWD:   /usr/edb/efm-4.9/bin/efm_db_functions

# Allow user 'efm' to sudo efm_root_functions as 'root' to write/delete the PID file,
# validate the db.service.owner property, etc.
efm    ALL=(ALL)           NOPASSWD:   /usr/edb/efm-4.9/bin/efm_root_functions

# Allow user 'efm' to sudo efm_address as root for VIP tasks.
efm    ALL=(ALL)           NOPASSWD:   /usr/edb/efm-4.9/bin/efm_address

# Allow user 'efm' to sudo efm_pgpool_functions as root for pgpool tasks.
efm    ALL=(ALL)           NOPASSWD:   /usr/edb/efm-4.9/bin/efm_pgpool_functions

# relax tty requirement for user 'efm'
Defaults:efm !requiretty
If you're using Failover Manager to monitor clusters that are owned by users other than postgres or enterprisedb, make a copy of the efm-49 file. Then modify the content to allow the user to access the efm_functions script to manage their clusters.

If an agent can't start because of permission problems, make sure the default /etc/sudoers file contains the following line at the end of the file:

## Read drop-in files from /etc/sudoers.d (the # here does not # mean a comment)

#includedir /etc/sudoers.d

For me I use svcpostgres , how should it look like ?
