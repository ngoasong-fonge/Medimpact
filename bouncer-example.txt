[databases]
db1 = host=1.1.1.1 port=5432 dbname=db1 user=db1_user
db2 = host=1.1.1.1 port=5432 dbname=db2 user=db2_user

[pgbouncer]
listen_addr = 1.1.1.1
listen_port = 3333
auth_type = md5
auth_file = /etc/pgbouncer/userlist.txt
admin_users = admin_user
pool_mode = transaction
max_client_conn = 1000
default_pool_size = 20
logfile = /var/log/pgbouncer/pgbouncer.log
pidfile = /var/log/pgbouncer/pgbouncer.pid
unix_socket_dir = /tmp
ignore_startup_parameters = extra_float_digits


====================================
WITH SchemaSize AS (
  SELECT 
    ps.nspname AS schema_name,
    SUM(pg_total_relation_size(pc.oid)) AS total_size
  FROM 
    pg_class pc
  JOIN 
    pg_catalog.pg_namespace ps ON ps.oid = pc.relnamespace
  GROUP BY 
    ps.nspname
)
SELECT 
  ss.schema_name,
  pg_size_pretty(ss.total_size) AS total_size_pretty
FROM 
  SchemaSize ss
ORDER BY 
  ss.total_size DESC
LIMIT 10;


======================


#!/bin/bash

# Define the parameters passed by repmgr
NODE_ID=$1      # %n - Node ID
EVENT_TYPE=$2     # %e - Event type
EVENT_STATUS=$3   # %s - Event status
EVENT_TIMESTAMP=$4 # %t - Event timestamp
EVENT_DETAILS=$5  # %d - Event details (optional)

# Email settings
TO_EMAIL="ngoasong.fonge@medimpact.com"
SUBJECT="PostgreSQL Replication Event Notification: $EVENT_TYPE"
FROM_EMAIL="noreply@example.com"

# Construct the email body
EMAIL_BODY=$(cat <<EOF
Replication Event Notification

Node Name: $NODE_NAME
Event Type: $EVENT_TYPE
Event Status: $EVENT_STATUS
Timestamp: $EVENT_TIMESTAMP
Details: $EVENT_DETAILS

This is an automated message from your PostgreSQL replication system.
EOF
)

# Send the email
echo "$EMAIL_BODY" | mail -s "$SUBJECT" -r "$FROM_EMAIL" "$TO_EMAIL"

#   %n - node ID
#   %e - event type
#   %s - success (1 or 0)
#   %t - timestamp
#   %d - details

