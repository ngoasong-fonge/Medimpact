

citus=# vacuum full verbose xray.impact_paths;
INFO:  vacuuming "xray.impact_paths"
INFO:  "xray.impact_paths": found 0 removable, 62839 nonremovable row versions in 2190 pages
DETAIL:  0 dead row versions cannot be removed yet.
CPU: user: 0.22 s, system: 0.03 s, elapsed: 0.28 s.
VACUUM

[svcpostgres@pv2medpgbr1 ~]$ /opt/app/pgbackrest/bin/pgbackrest version
pgBackRest 2.49

git clone https://github.com/laurenz/oracle_fdw.git
-----------------------------------------------------------------------------------------------------------
On pgbackup Server (as svcpostgres user):
# Create .ssh directory
mkdir -m 750 /home/pgbackrest/.ssh

# Generate SSH key pair
ssh-keygen -f /home/pgbackrest/.ssh/id_rsa -t rsa -b 4096 -N ""

On db1 Server (as svcpostgres user):
# Create .ssh directory
mkdir -m 750 -p /var/lib/postgresql/.ssh

# Generate SSH key pair
ssh-keygen -f /var/lib/postgresql/.ssh/id_rsa -t rsa -b 4096 -N ""

Exchange Public Keys:
On pgbackup, add the public key to db1's authorized_keys:
cat /home/pgbackrest/.ssh/id_rsa.pub | ssh postgres@db1 "mkdir -p ~/.ssh && cat >> ~/.ssh/authorized_keys"

On db1, add the public key to pgbackup's authorized_keys:
cat /var/lib/postgresql/.ssh/id_rsa.pub | ssh pgbackrest@pgbackup "mkdir -p ~/.ssh && cat >> ~/.ssh/authorized_keys"

After these steps, you should be able to SSH between the servers without being prompted for a password.
Always ensure that the permissions on the ~/.ssh directory and the authorized_keys file are set correctly for security reasons:
# On pgbackup
chmod 700 /home/pgbackrest/.ssh
chmod 600 /home/pgbackrest/.ssh/authorized_keys

# On db1
chmod 700 /var/lib/postgresql/.ssh
chmod 600 /var/lib/postgresql/.ssh/authorized_keys

To test if the SSH setup is working:
From pgbackup to db1:
ssh postgres@db1

From db1 to pgbackup:
ssh pgbackrest@pgbackup

archive_command: pgbackrest --stanza=cluster_1 archive-push "/var/lib/postgresql/15/main/pg_wal/%f"
pgbackrest --stanza=pgqa1 archive-push %p

archive_command: pgbackrest --stanza=pgqa1 archive-push "/opt/app/postgres-data/data/pg_wal/%f"


ln -s /opt/app/pgbackrest-2.49/bin/pgbackrest /opt/app/pgbackrest/bin/pgbackrest

run the query (CALL partman.run_maintenance_proc();)  calling the partman.run_maintenance_proc function

citus=# select * from dmeapps.departments_tst limit 2;
ERROR:  connection for foreign table "departments_tst" cannot be authenticated
DETAIL:  ORA-01017: invalid username/password; logon denied


find /path/to/your/directory -type f -mtime +0


2023-12-28 22:33:45.111 P00   INFO: archive-push command begin 2.49: [pg_wal/0000001B0000001C0000005F] --config=/opt/app/pgbackrest-data/pgbackrest/pgbackrest.conf --exec-id=2968727-5ace519f --log-level-console=info --log-level-file=detail --pg1-path=/opt/app/postgres-data/data --process-max=4 --repo1-host=pv2medpgbr1 --repo1-host-user=svcpostgres --stanza=pgqa1
ERROR: [103]: unable to find a valid repository:
       repo1: [ExecuteError] remote-0 process on 'pv2medpgbr1' terminated unexpectedly [102]: unable to execute 'ssh': [2] No such file or directory
2023-12-28 22:33:45.117 P00   INFO: archive-push command end: aborted with exception [103]
2023-12-28 22:33:45.117 UTC [] [2968321]: [40-1] user=,db=,host=LOG:  archive command failed with exit code 103
2023-12-28 22:33:45.117 UTC [] [2968321]: [41-1] user=,db=,host=DETAIL:  The failed archive command was: /opt/app/pgbackrest-2.49/bin/pgbackrest --stanza=pgqa1 --config=/opt/app/pgbackrest-data/pgbackrest/pgbackrest.conf archive-push pg_wal/0000001B0000001C0000005F

