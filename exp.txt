SELECT run_command_on_placements(
  'audit_table',
  $cmd$
    CREATE OR REPLACE FUNCTION process_audit() RETURNS TRIGGER AS $$
      BEGIN
        INSERT INTO %s (author,value)
          VALUES (current_user,NEW.value);
        RETURN NEW;
      END;
    $$ LANGUAGE plpgsql;
  $cmd$
);

SELECT run_command_on_placements(
  'insert_target',
  $cmd$
    CREATE TRIGGER emp_audit
    AFTER INSERT OR UPDATE ON %s
      FOR EACH ROW EXECUTE PROCEDURE process_audit();
  $cmd$
);

INSERT INTO insert_target (value) VALUES ('inserted value');

SELECT run_command_on_placements(
  'shard6.account_hist',
  $cmd$
    CREATE OR REPLACE FUNCTION shard6.tfn_account_hist() RETURNS TRIGGER AS $$
      BEGIN
        INSERT INTO %s (account_hist_id,entered, entered_by, replaced, replaced_by, account_id, client_id, account_name,
                                account_code, account_desc, account_type, status, version, effective_date)
                  VALUES (nextval('shard7.account_hist_account_hist_id_seq'),current_user, NEW.entered, NEW.entered_by, NEW.account_id, NEW.client_id, 
                NEW.account_name, NEW.account_code, NEW.account_desc, NEW.account_type, 
                NEW.status, NEW.version, NEW.effective_date);
                RETURN NEW;
      END;
    $$ LANGUAGE plpgsql;
  $cmd$
);

SELECT run_command_on_placements(
  'shard6.account',
  $cmd$
    CREATE TRIGGER trg_account_hist
    AFTER INSERT OR UPDATE OR DELETE ON %s
    FOR EACH ROW EXECUTE PROCEDURE shard7.tfn_account_hist()
  $cmd$
);

CREATE OR REPLACE FUNCTION shard6.tfn_account_hist()
RETURNS trigger
LANGUAGE plpgsql
AS $function$
              BEGIN
                INSERT INTO shard6.account_hist_102649 (account_hist_id,entered, entered_by, replaced, replaced_by, account_id, client_id, account_name,
                                account_code, account_desc, account_type, status, version, effective_date)
                  VALUES (nextval('shard7.account_hist_account_hist_id_seq'),current_user, NEW.entered, NEW.entered_by, NEW.account_id, NEW.client_id, 
                NEW.account_name, NEW.account_code, NEW.account_desc, NEW.account_type, 
                NEW.status, NEW.version, NEW.effective_date);
                RETURN NEW;
              END;
            $function$
;


citus=# TABLE shard6.account;
  account_id  |          entered           | entered_by | client_id | account_name | account_code |            account_desc             | account_type | status | version |       effective_date
--------------+----------------------------+------------+-----------+--------------+--------------+-------------------------------------+--------------+--------+---------+----------------------------
 100000000002 | 2024-11-05 16:01:08.552385 | test_user  |     12345 | Test Account | TST123       | This is a test account description. |            1 |      1 |       1 | 2024-11-05 16:01:08.552385
(1 row)

citus=# TABLE shard6.account_hist;
 account_hist_id | entered | entered_by | replaced | replaced_by | account_id | client_id | account_name | account_code | account_desc | account_type | status | version | effective_date
-----------------+---------+------------+----------+-------------+------------+-----------+--------------+--------------+--------------+--------------+--------+---------+----------------
(0 rows)
