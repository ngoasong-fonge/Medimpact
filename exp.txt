Determine the Desired Size: First, you need to decide how much memory you want to allocate to the shared_buffers parameter. In this example, you want to allocate 1GB of memory.

Convert to Kilobytes (KB): Amazon RDS for PostgreSQL uses kilobytes as the unit for the shared_buffers parameter. To convert 1GB to kilobytes, you perform the following conversions:

1 GB = 1024 MB (since 1 GB = 1024 megabytes)
1024 MB = 1024 * 1024 KB (since 1 megabyte = 1024 kilobytes)
1024 * 1024 KB = 1048576 KB
So, 1 GB is equal to 1048576 KB.

Divide by the Unit Size: The shared_buffers parameter is specified in 8KB units. To calculate the value you should set, you divide the total number of kilobytes (calculated in step 2) by the size of each unit, which is 8KB:

1048576 KB / 8 KB = 131072
So, you should set the shared_buffers parameter to 131072 in your Amazon RDS parameter group.

https://dba.stackexchange.com/questions/137297/how-to-set-up-amazon-rds-parameter-group-for-postgres

-------------------------------------------------------------------------------------------------------------

To calculate the value for the wal_buffer parameter in PostgreSQL on Amazon RDS when you want to allocate 16 MB of memory, you can use the following steps:

You want to allocate 16 MB of memory.
The unit of wal_buffer in PostgreSQL is 8 KB.
Here's how you calculate it:

16 MB = 16 * 1024 KB (1 MB = 1024 KB).

So, to allocate 16 MB of memory for the wal_buffer, you need:

(16 * 1024 KB) / 8 KB = 2048

So, you should set the wal_buffer parameter to 2048 in your RDS parameter group to allocate 16 MB of memory for the Write-Ahead Logging (WAL) buffer. 


CREATE TABLE shard.employee (
    employee_id serial ,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    department_id INT,
    created_date DATE
);


0 2 * * 6,0,1,2,3 /opt/app/patroni/scripts/pgdump_schemabackup.sh


SELECT schemaname AS schema_name,
       relname AS table_name,
       last_analyze AS last_manual_analyze,
       last_autoanalyze AS last_auto_analyze
FROM pg_stat_user_tables;

SELECT relname AS table_name,
       last_analyze AS last_manual_analyze,
       last_autoanalyze AS last_auto_analyze
FROM pg_stat_user_tables
WHERE schemaname = 'public' -- Replace 'public' with the schema name if the table is in a different schema
  AND relname = 'your_table_name'; -- Replace 'your_table_name' with the name of the table you want to check


